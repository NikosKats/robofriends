{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","cardsArray","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","serachField","target","value","_this2","fetch","then","response","json","users","_this$state","filterRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.3ba5637a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib b3 pa3 ma2 grow shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  const cardsArray = robots.map((user, i) => {\n    // if (true) {\n    //   throw new Error(\"NOOOOOO!\");\n    // }\n    return (\n      <Card\n        key={i}\n        id={robots[i].id}\n        name={robots[i].name}\n        email={robots[i].email}\n      />\n    );\n  });\n  return <div>{cardsArray}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops. that is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      serachField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.cypress.io/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ serachField: event.target.value });\n  };\n\n  render() {\n    const { robots, serachField } = this.state;\n\n    const filterRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(serachField.toLowerCase());\n    });\n\n    return !robots.length ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filterRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}